#*****************************************************************************************
# Vivado (TM) v2020.2 (64-bit)
#
# build.tcl: Tcl script for re-creating project 'fox_hoplite_multicast'
#
# Generated by Vivado on Tue Nov 02 12:31:50 AEST 2021
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (build.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "${origin_dir}/../../hdl/picorv32/src/picorv32.v"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"
#    "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/board_top_fox_hoplite_multicast.vhd"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"
#    "${origin_dir}/../../hdl/ip/clock_divider/clock_divider.xci"
#    "${origin_dir}/../../constraints/Nexys-4-DDR-bitstream.xdc"
#    "${origin_dir}/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
#    "${origin_dir}/../../hdl/packages/random.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/nic_testbench.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/hoplite_router_multicast_tb.vhd"
#    "${origin_dir}/../../vivado/fox_hoplite_multicast/hoplite_router_tb_behav.wcfg"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/hoplite_network_tb_defs.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/multicast_defs.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_pe.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"
#    "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb.vhd"
#    "${origin_dir}/../../vivado/fox_hoplite_multicast/hoplite_tb_behav.wcfg"
#    "${origin_dir}/../../hdl/picorv32/src/picorv32.v"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"
#    "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"
#    "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/top_fox_hoplite_multicast_tb.vhd"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result_tb.hex"
#    "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_tb.hex"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"
#    "${origin_dir}/../../vivado/fox_hoplite_multicast/top_tb_behav.wcfg"
#    "${origin_dir}/../../hdl/packages/conv_functions.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/message_encoder_tb.vhd"
#    "${origin_dir}/../../hdl/packages/conv_functions.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/building_blocks/tb/fifo_sync_memory_initialise_tb.vhd"
#    "${origin_dir}/../../hdl/building_blocks/tb/matrix.txt"
#    "${origin_dir}/../../hdl/building_blocks/tb/matrix_padded.txt"
#    "${origin_dir}/../../hdl/packages/conv_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_tb.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
#    "${origin_dir}/../../vivado/fox_hoplite_multicast/rom_tb_behav.wcfg"
#    "${origin_dir}/../../hdl/packages/conv_functions.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
#    "${origin_dir}/../../hdl/packages/math_functions.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
#    "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"
#    "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"
#    "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_node_tb.vhd"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"
#    "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
#    "${origin_dir}/../../vivado/fox_hoplite_multicast/rom_node_tb_behav.wcfg"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "${origin_dir}/../../hdl/picorv32/src/picorv32.v" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/rom.vhd" \
   "${origin_dir}/../../hdl/fox/src/rom_burst.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/board_top_fox_hoplite_multicast.vhd" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif" \
   "${origin_dir}/../../hdl/ip/clock_divider/clock_divider.xci" \
   "${origin_dir}/../../constraints/Nexys-4-DDR-bitstream.xdc" \
   "${origin_dir}/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd" \
   "${origin_dir}/../../hdl/packages/random.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/nic_testbench.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/hoplite_router_multicast_tb.vhd" \
   "${origin_dir}/../../vivado/fox_hoplite_multicast/hoplite_router_tb_behav.wcfg" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/hoplite_network_tb_defs.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/multicast_defs.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_pe.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd" \
   "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb.vhd" \
   "${origin_dir}/../../vivado/fox_hoplite_multicast/hoplite_tb_behav.wcfg" \
   "${origin_dir}/../../hdl/picorv32/src/picorv32.v" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/rom.vhd" \
   "${origin_dir}/../../hdl/fox/src/rom_burst.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd" \
   "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/top_fox_hoplite_multicast_tb.vhd" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result_tb.hex" \
   "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_tb.hex" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif" \
   "${origin_dir}/../../vivado/fox_hoplite_multicast/top_tb_behav.wcfg" \
   "${origin_dir}/../../hdl/packages/conv_functions.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/message_encoder_tb.vhd" \
   "${origin_dir}/../../hdl/packages/conv_functions.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/building_blocks/tb/fifo_sync_memory_initialise_tb.vhd" \
   "${origin_dir}/../../hdl/building_blocks/tb/matrix.txt" \
   "${origin_dir}/../../hdl/building_blocks/tb/matrix_padded.txt" \
   "${origin_dir}/../../hdl/packages/conv_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/rom.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_tb.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd" \
   "${origin_dir}/../../vivado/fox_hoplite_multicast/rom_tb_behav.wcfg" \
   "${origin_dir}/../../hdl/packages/conv_functions.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd" \
   "${origin_dir}/../../hdl/packages/math_functions.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd" \
   "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd" \
   "${origin_dir}/../../hdl/building_blocks/src/rom.vhd" \
   "${origin_dir}/../../hdl/fox/src/rom_burst.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_node_tb.vhd" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif" \
   "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd" \
   "${origin_dir}/../../vivado/fox_hoplite_multicast/rom_node_tb_behav.wcfg" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "fox_hoplite_multicast"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "build.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/fox_hoplite_multicast"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a100tcsg324-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../../../xilinx/boards/vivado-boards-master/new/board_files"]" -objects $obj
set_property -name "board_part" -value "digilentinc.com:nexys4_ddr:part0:1.1" -objects $obj
set_property -name "corecontainer.enable" -value "1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_core_container" -value "1" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "nexys4" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "24" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "24" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "24" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "24" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "24" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "24" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "24" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "1694" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../hdl/picorv32/src/picorv32.v"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/board_top_fox_hoplite_multicast.vhd"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/io.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/nic_dual.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/result_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/rom.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox/src/rom_burst.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/uart_tx_buffered.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/board_top_fox_hoplite_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/memory/combined.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "board_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../../hdl/ip/clock_divider/clock_divider.xci"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../../hdl/ip/clock_divider/clock_divider.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../constraints/Nexys-4-DDR-bitstream.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../constraints/Nexys-4-DDR-bitstream.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc"]" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../../constraints/fox_hoplite_multicast/Nexys-4-DDR-Master-Fox-Hoplite-Multicast.xdc"]" -objects $obj

# Create 'Hoplite_router' fileset (if not found)
if {[string equal [get_filesets -quiet Hoplite_router] ""]} {
  create_fileset -simset Hoplite_router
}

# Set 'Hoplite_router' fileset object
set obj [get_filesets Hoplite_router]
set files [list \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/random.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/nic_testbench.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/hoplite_router_multicast_tb.vhd"] \
 [file normalize "${origin_dir}/hoplite_router_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'Hoplite_router' fileset file properties for remote files
set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/random.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/nic_testbench.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/hoplite_router_multicast_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_router] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'Hoplite_router' fileset file properties for local files
# None

# Set 'Hoplite_router' fileset properties
set obj [get_filesets Hoplite_router]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "hoplite_router_multicast_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "5.5us" -objects $obj

# Create 'Hoplite_network' fileset (if not found)
if {[string equal [get_filesets -quiet Hoplite_network] ""]} {
  create_fileset -simset Hoplite_network
}

# Set 'Hoplite_network' fileset object
set obj [get_filesets Hoplite_network]
set files [list \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/hoplite_network_tb_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/multicast_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb_pe.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/tb/hoplite_multicast_tb.vhd"] \
 [file normalize "${origin_dir}/hoplite_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'Hoplite_network' fileset file properties for remote files
set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/hoplite_network_tb_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/multicast_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/hoplite_multicast_tb_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/hoplite_multicast_tb_pe.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/nic_dual.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/tb/hoplite_multicast_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Hoplite_network] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'Hoplite_network' fileset file properties for local files
# None

# Set 'Hoplite_network' fileset properties
set obj [get_filesets Hoplite_network]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "hoplite_multicast_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "3.5us" -objects $obj

# Create 'Fox' fileset (if not found)
if {[string equal [get_filesets -quiet Fox] ""]} {
  create_fileset -simset Fox
}

# Set 'Fox' fileset object
set obj [get_filesets Fox]
set files [list \
 [file normalize "${origin_dir}/../../hdl/picorv32/src/picorv32.v"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/io.vh"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/system_fox_hoplite_multicast.v"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/multicast_router_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/result_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"] \
 [file normalize "${origin_dir}/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/uart_tx_buffered.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/top_fox_hoplite_multicast_tb.vhd"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result_tb.hex"] \
 [file normalize "${origin_dir}/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_tb.hex"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"] \
 [file normalize "${origin_dir}/top_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'Fox' fileset file properties for remote files
set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/io.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/firmware_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/multicast_router_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/nic_dual.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/result_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/rom.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox/src/rom_burst.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/top_fox_hoplite_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_clk_div.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_debouncer.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_rx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_tx.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/uart.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/submodules/uart-for-fpga/rtl/comp/uart_parity.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/uart_tx_buffered.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/tb/top_fox_hoplite_multicast_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_result_tb.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../firmware/fox_hoplite_multicast/firmware_fox_hoplite_multicast_tb.hex"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/memory/combined.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Fox] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj


# Set 'Fox' fileset file properties for local files
# None

# Set 'Fox' fileset properties
set obj [get_filesets Fox]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "nl.mode" -value "funcsim" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "top_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "50ms" -objects $obj

# Create 'Encoder' fileset (if not found)
if {[string equal [get_filesets -quiet Encoder] ""]} {
  create_fileset -simset Encoder
}

# Set 'Encoder' fileset object
set obj [get_filesets Encoder]
set files [list \
 [file normalize "${origin_dir}/../../hdl/packages/conv_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/message_encoder_tb.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'Encoder' fileset file properties for remote files
set file "$origin_dir/../../hdl/packages/conv_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_encoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/tb/message_encoder_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets Encoder] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'Encoder' fileset file properties for local files
# None

# Set 'Encoder' fileset properties
set obj [get_filesets Encoder]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "message_encoder_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1us" -objects $obj

# Create 'FIFO_initialise' fileset (if not found)
if {[string equal [get_filesets -quiet FIFO_initialise] ""]} {
  create_fileset -simset FIFO_initialise
}

# Set 'FIFO_initialise' fileset object
set obj [get_filesets FIFO_initialise]
set files [list \
 [file normalize "${origin_dir}/../../hdl/packages/conv_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/tb/fifo_sync_memory_initialise_tb.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/tb/matrix.txt"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/tb/matrix_padded.txt"] \
]
add_files -norecurse -fileset $obj $files

# Set 'FIFO_initialise' fileset file properties for remote files
set file "$origin_dir/../../hdl/packages/conv_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/tb/fifo_sync_memory_initialise_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/tb/matrix.txt"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/tb/matrix_padded.txt"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets FIFO_initialise] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj


# Set 'FIFO_initialise' fileset file properties for local files
# None

# Set 'FIFO_initialise' fileset properties
set obj [get_filesets FIFO_initialise]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "fifo_sync_memory_initialise_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "1us" -objects $obj

# Create 'ROM' fileset (if not found)
if {[string equal [get_filesets -quiet ROM] ""]} {
  create_fileset -simset ROM
}

# Set 'ROM' fileset object
set obj [get_filesets ROM]
set files [list \
 [file normalize "${origin_dir}/../../hdl/packages/conv_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_tb.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"] \
 [file normalize "${origin_dir}/rom_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'ROM' fileset file properties for remote files
set file "$origin_dir/../../hdl/packages/conv_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/rom.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/tb/rom_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/memory/combined.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'ROM' fileset file properties for local files
# None

# Set 'ROM' fileset properties
set obj [get_filesets ROM]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "rom_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "15ms" -objects $obj

# Create 'ROM_node' fileset (if not found)
if {[string equal [get_filesets -quiet ROM_node] ""]} {
  create_fileset -simset ROM_node
}

# Set 'ROM_node' fileset object
set obj [get_filesets ROM_node]
set files [list \
 [file normalize "${origin_dir}/../../hdl/packages/conv_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/packages/math_functions.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/hoplite_router_multicast.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"] \
 [file normalize "${origin_dir}/../../hdl/hoplite/src/nic_dual.vhd"] \
 [file normalize "${origin_dir}/../../hdl/building_blocks/src/rom.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox/src/rom_burst.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/tb/rom_node_tb.vhd"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/memory/combined.mif"] \
 [file normalize "${origin_dir}/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"] \
 [file normalize "${origin_dir}/rom_node_tb_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'ROM_node' fileset file properties for remote files
set file "$origin_dir/../../hdl/packages/conv_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_memory_initialise.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/fifo_sync_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/packet_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/packages/math_functions.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/matrix_config.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/fox_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/hoplite_router_multicast.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/message_decoder.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/hoplite/src/nic_dual.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/building_blocks/src/rom.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox/src/rom_burst.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/rom_node.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/tb/rom_node_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/memory/combined.mif"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "Memory Initialization Files" -objects $file_obj

set file "$origin_dir/../../hdl/fox_hoplite_multicast/src/multicast_defs.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets ROM_node] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'ROM_node' fileset file properties for local files
# None

# Set 'ROM_node' fileset properties
set obj [get_filesets ROM_node]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "source_set" -value "" -objects $obj
set_property -name "top" -value "rom_node_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.simulate.runtime" -value "15ms" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "auto_incremental_checkpoint.directory" -value "${origin_dir}/../../vivado/multi_core_hoplite/multi_core_hoplite.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'synth_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet synth_1_copy_1] ""]} {
    create_run -name synth_1_copy_1 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1_copy_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1_copy_1]
}
set obj [get_runs synth_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_copy_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_copy_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_copy_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1_copy_1]
set_property -name "auto_incremental_checkpoint.directory" -value "${origin_dir}/../../vivado/multi_core_hoplite/ENGG4811_vivado.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# Create 'flow_run' run (if not found)
if {[string equal [get_runs -quiet flow_run] ""]} {
    create_run -name flow_run -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2020} -strategy "Flow_AreaOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_AreaOptimized_high" [get_runs flow_run]
  set_property flow "Vivado Synthesis 2020" [get_runs flow_run]
}
set obj [get_runs flow_run]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'flow_run_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs flow_run] flow_run_synth_report_utilization_0] "" ] } {
  create_report_config -report_name flow_run_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs flow_run
}
set obj [get_report_configs -of_objects [get_runs flow_run] flow_run_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs flow_run]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/srcs/utils_1/imports/flow_run" -objects $obj
set_property -name "strategy" -value "Flow_AreaOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "AreaOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.control_set_opt_threshold" -value "1" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2020} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2020" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "auto_incremental_checkpoint.directory" -value "${origin_dir}/../../vivado/multi_core_hoplite/multi_core_hoplite.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_2' run (if not found)
if {[string equal [get_runs -quiet impl_2] ""]} {
    create_run -name impl_2 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2020} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run flow_run
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_2]
  set_property flow "Vivado Implementation 2020" [get_runs impl_2]
}
set obj [get_runs impl_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_2
}
set obj [get_report_configs -of_objects [get_runs impl_2] impl_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_2]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/srcs/utils_1/imports/impl_2" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
